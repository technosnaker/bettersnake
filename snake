import pygame
import random

# Initialisierung von Pygame
pygame.init()

# Fenstergröße
width = 800
height = 600

# Farben
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)

# Erstellung des Fensters
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Snake Game")

# Schriftart
font_style = pygame.font.SysFont(None, 50)

# Funktion zum Anzeigen von Nachrichten
def message(msg, color):
    message = font_style.render(msg, True, color)
    screen.blit(message, [width/6, height/3])

# Funktion zum Zeichnen der Schlange
def draw_snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])

# Funktion zum Abspielen von Soundeffekten
def play_sound(sound):
    pygame.mixer.music.load(sound)
    pygame.mixer.music.play()

# Funktion zum Schreiben der Highscore-Liste
def write_highscore(score):
    with open("highscore.txt", "a") as f:
        f.write(str(score) + "\n")

# Funktion zum Lesen der Highscore-Liste
def read_highscore():
    with open("highscore.txt", "r") as f:
        lines = f.readlines()
        highscore_list = []
        for line in lines:
            highscore_list.append(int(line.strip()))
        highscore_list.sort(reverse=True)
        return highscore_list

# Hauptfunktion des Spiels
def gameLoop():
    # Spielvariablen
    game_over = False
    game_close = False

    # Startposition der Schlange
    x1 = width / 2
    y1 = height / 2

    # Veränderung der Position der Schlange
    x1_change = 0
    y1_change = 0

    # Länge der Schlange
    snake_List = []
    Length_of_snake = 1

    # Position des Essens
    foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
    foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0

    # Größe der Schlange
    snake_block = 10

    # Geschwindigkeit der Schlange
    clock = pygame.time.Clock()
    FPS = 30

    # Soundeffekte
    eat_sound = pygame.mixer.Sound("eat_sound.wav")
    game_over_sound = pygame.mixer.Sound("game_over_sound.wav")

    # Schleife für das Spiel
    while not game_over:

        # Schleife für das Ende des Spiels
        while game_close == True:
            screen.fill(white)
            message("Du hast verloren! Drücke Q zum Beenden oder C zum Neustarten", red)
            pygame.display.update()

            # Überprüfung der Tasteneingabe
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        gameLoop()

        # Überprüfung der Tasteneingabe
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        # Überprüfung, ob die Schlange das Fenster verlässt
        if x1 >= width or x1 < 0 or y1 >= height or y1 < 0:
            game_close = True

        # Veränderung der Position der Schlange
        x1 += x1_change
        y1 += y1_change

        # Zeichnen des Hintergrunds
        screen.fill(white)

        # Zeichnen des Essens
        pygame.draw.rect(screen, red, [foodx, foody, snake_block, snake_block])

        # Aktualisierung der Schlange
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        # Überprüfung, ob die Schlange das Essen erreicht hat
        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True
                play_sound(game_over_sound)
                write_highscore(Length_of_snake - 1)

        # Zeichnen der Schlange
        draw_snake(snake_block, snake_List)

        # Überprüfung, ob die Schlange das Essen erreicht hat
        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
            fo = round(random.randrange(0, height - snake_block) / 10.0) * 10.0
            Length_of_snake += 1
            play_sound(eat_sound)

        # Aktualisierung des Fensters
        pygame.display.update()

        # Aktualisierung der Geschwindigkeit
        clock.tick(FPS)

    # Beenden von Pygame
    pygame.quit()

# Starten des Spiels
gameLoop()

# Lesen der Highscore-Liste
highscore_list = read_highscore()

# Anzeigen der Highscore-Liste
for i in range(min(len(highscore_list), 10)):
    print(str(i+1) + ". Platz: " + str(highscore_list[i]))
